version: "3.7"
services:
  token:
    image: svix/svix-server:latest
    environment:
      WAIT_FOR: "true"  # We want to wait for the default services
      SVIX_JWT_SECRET: "x"
      SVIX_REDIS_DSN: "redis://redis:6379"
      SVIX_DB_DSN: "postgresql://postgres:postgres@pgbouncer/postgres"
    command: ["svix-server", "jwt", "generate"]
    depends_on:
    - pgbouncer
    - redis

  svix:
    image: svix/svix-server:latest
    environment:
      WAIT_FOR: "true"  # We want to wait for the default services
      SVIX_JWT_SECRET: "x"
      SVIX_REDIS_DSN: "redis://redis:6379"
      SVIX_WHITELIST_SUBNETS: '[ 0.0.0.0/0 ]'
      SVIX_DB_DSN: "postgresql://postgres:postgres@pgbouncer/postgres"
    ports:
      - "8071:8071"
    depends_on:
    - pgbouncer
    - redis

  postgres:
    image: postgres:13.4
    #volumes:
    #  - "postgres-data:/var/lib/postgresql/data/"
    environment:
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"

  pgbouncer:
    image: edoburu/pgbouncer:1.15.0
    healthcheck:
      test: "pg_isready -h localhost"
      interval: 30s
      timeout: 10s
      retries: 3
    environment:
      DB_HOST: "postgres"
      DB_USER: "postgres"
      DB_PASSWORD: "postgres"
      MAX_CLIENT_CONN: 500
    depends_on:
    - postgres
    ports:
      - "8079:5432" # Needed for sqlx

  redis:
    image: "redis:7-alpine"
    command: "--save 60 500 --appendonly yes --appendfsync everysec"
    volumes:
      - "redis-data:/data"
    ports:
      - "8078:6379" # Needed for sqlx

  pubsub:
    image: google/cloud-sdk:latest
    command: ["gcloud", "beta", "emulators", "pubsub", "start", "--host-port=0.0.0.0:8085", "--project=demo"]
    ports:
      - "8085:8085"
  
  mailhog:
    image: us-east1-docker.pkg.dev/anchorage-ci/docker-build/mailhog/mailhog:latest@sha256:8d76a3d4ffa32a3661311944007a415332c4bb855657f4f6c57996405c009bea
    restart: unless-stopped
    ports:
      - '127.0.0.1:1025:1025'
      - '8025:8025'
  
  mock:
    build:
      context: .
      dockerfile: ./Dockerfile
    command: ["/app/poc", "mock"]
    ports:
      - "3428:3428"
      - "2574:2574"
      - "3526:3526"

  webhooks:
    build:
      context: .
      dockerfile: ./Dockerfile
    command: ["/app/poc", "serve", "webhooks"]
    ports:
      - "4010:4010"

  router:
    build:
      context: .
      dockerfile: ./Dockerfile
    command: ["/app/poc", "mock", "router"]
    ports:
      - "4020:4020"

  email:
    build:
      context: .
      dockerfile: ./Dockerfile
    command: ["/app/poc", "mock", "emails"]
    ports:
      - "4030:4030"

volumes:
  # postgres-data:
  redis-data: